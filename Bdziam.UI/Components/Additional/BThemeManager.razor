@using System.Drawing
@using Bdziam.UI.Model.Enums
@namespace Bdziam.UI
@using MaterialColorUtilities.Palettes
@using Size = Bdziam.UI.Model.Enums.Size

<BToggleIconButton Id="ThemeManagerButton" Size="Size.Small" Variant="ButtonVariant.Text" CheckedIcon="BootstrapIcon.Palette" UncheckedIcon="BootstrapIcon.Palette" @bind-Checked="IsThemeManagerOpen"></BToggleIconButton>
<BPopover TargetElementId="ThemeManagerButton" Position="Position.Bottom" @bind-IsOpen="IsThemeManagerOpen">
    <BText Typo="Typo.H6">Seed Color</BText>
    <BStack Orientation="Orientation.Horizontal" Spacing="Size.Small">
        <BButton Variant="ButtonVariant.Text" Style="background-color: orangered; width: 25px; height: 25px;" BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(Color.OrangeRed)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: red; width: 25px; height: 25px;" BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(Color.Red)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: lime; width: 25px; height: 25px;" BorderRadius="BorderRadius.Pill"  OnClick="() => SeedColorChanged?.Invoke(Color.Lime)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: magenta; width: 25px; height: 25px;"  BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(Color.Magenta)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: blue; width: 25px; height: 25px;"  BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(Color.Blue)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: deepskyblue; width: 25px; height: 25px;"  BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(Color.DeepSkyBlue)"></BButton>
    </BStack>
    <BText Typo="Typo.H6">Style</BText>
    <BStack Orientation="Orientation.Vertical" Spacing="Size.Small">
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.Expressive)">Expressive</BButton>
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.Content)">Content</BButton>
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.Rainbow)">Rainbow</BButton>
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.Spritz)">Spritz</BButton>
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.Vibrant)">Vibrant (Default)</BButton>
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.FruitSalad)">FruitSalad</BButton>
        <BButton Size="Size.Small" Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(Style.TonalSpot)">TonalSpot</BButton>
    </BStack>
</BPopover>

