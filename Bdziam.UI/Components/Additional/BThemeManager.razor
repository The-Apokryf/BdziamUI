@using System.Drawing
@using Bdziam.UI.Model.Enums
@using Bdziam.UI.Theming.MaterialColors.DynamicColor
@using Color = Bdziam.UI.Model.Enums.MaterialColor
@namespace Bdziam.UI
@using Size = Bdziam.UI.Model.Enums.Size

<BToggleIconButton Id="ThemeManagerButton" IconSize="Size.Small" Variant="ButtonVariant.Text" Color="MaterialColor.SurfaceContainer"  CheckedIcon="GoogleMaterialFilledIcon.Palette" UncheckedIcon="GoogleMaterialOutlinedIcon.Palette" @bind-Checked="IsThemeManagerOpen"></BToggleIconButton>
<BPopover TargetElementId="ThemeManagerButton" Position="Position.Bottom" @bind-IsOpen="IsThemeManagerOpen">
    <BText Typo="Typo.LabelLarge" Color="Color.Surface">Seed Color</BText>
    <BStack Orientation="Orientation.Horizontal" Spacing="Size.Small">
        <BButton Variant="ButtonVariant.Text" Style="background-color: orangered; width: 25px; height: 25px;" BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(System.Drawing.Color.OrangeRed)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: red; width: 25px; height: 25px;" BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(System.Drawing.Color.Red)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: lime; width: 25px; height: 25px;" BorderRadius="BorderRadius.Pill"  OnClick="() => SeedColorChanged?.Invoke(System.Drawing.Color.Lime)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: magenta; width: 25px; height: 25px;"  BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(System.Drawing.Color.Magenta)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: blue; width: 25px; height: 25px;"  BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(System.Drawing.Color.Blue)"></BButton>
        <BButton Variant="ButtonVariant.Text" Style="background-color: deepskyblue; width: 25px; height: 25px;"  BorderRadius="BorderRadius.Pill" OnClick="() => SeedColorChanged?.Invoke(System.Drawing.Color.DeepSkyBlue)"></BButton>
    </BStack>
    <BText Typo="Typo.LabelLarge">Style</BText>
        <BStack Orientation="Orientation.Vertical" Spacing="Size.Small">
        @foreach (var colorVariant in Enum.GetValues<DynamicSchemeVariant>())
        {
            <BButton Variant="ButtonVariant.Gradient" OnClick="() => StyleChanged?.Invoke(colorVariant)">@colorVariant.ToString()</BButton>
        }
        </BStack>
</BPopover>

