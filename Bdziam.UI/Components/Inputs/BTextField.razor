@using Bdziam.UI.Model.Enums
@inherits Bdziam.UI.Components.CommonBase.BInputField<string>
@namespace Bdziam.UI

<div class="b-text-field-container" style="@ContainerStyles">
    @if (Variant == FieldVariant.Outline)
    {
    <div class="outline-container" style="@OutlineContainerStyles">
        <div class="field-content">
            <div style="position: relative; display: flex; align-items: center;">
                @if (LeadingIcon != null)
                {
                <div class="leading-icon" style="@LeadingIconStyles">
                    <BIcon Icon="@LeadingIcon" Size="Size.Medium" Color="Error ? MaterialColor.Error : MaterialColor.OnSurfaceVariant" />
                </div>
                }

                <div class="input-container" style="@InputWrapperStyles">
                    <label style="@LabelStyles">@Label</label>
                    <input
                        type="text"
                        value="@Value"
                        @oninput="OnInput"
                        @onfocus="OnFocus"
                        @onblur="OnBlur"
                        placeholder=" "
                        style="@InputStyles"
                        disabled="@Disabled"
                        readonly="@ReadOnly" />
                </div>

                @if (TrailingIcon != null)
                {
                <div class="trailing-icon" style="@TrailingIconStyles">
                    <BIcon Icon="@TrailingIcon" Size="Size.Medium" Color="Error ? MaterialColor.Error : MaterialColor.OnSurfaceVariant" />
                </div>
                }
            </div>
        </div>
    </div>
    }
    else
    {
    <div class="filled-container" style="@FilledContainerStyles">
        <div style="position: relative; display: flex; align-items: center;">
            @if (LeadingIcon != null)
            {
            <div class="leading-icon" style="@LeadingIconStyles">
                <BIcon Icon="@LeadingIcon" Size="Size.Medium" Color="Error ? MaterialColor.Error : MaterialColor.OnSurfaceVariant" />
            </div>
            }

            <div class="input-container" style="@InputWrapperStyles">
                <label style="@LabelStyles">@Label</label>
                <input
                    type="text"
                    value="@Value"
                    @oninput="OnInput"
                    @onfocus="OnFocus"
                    @onblur="OnBlur"
                    placeholder=" "
                    style="@InputStyles"
                    disabled="@Disabled"
                    readonly="@ReadOnly" />
              
            </div>

            @if (TrailingIcon != null)
            {
            <div class="trailing-icon" style="@TrailingIconStyles">
                <BIcon Icon="@TrailingIcon" Size="Size.Medium" Color="Error ? MaterialColor.Error : MaterialColor.OnSurfaceVariant" />
            </div>
            }
            <div class="inactive-line" style="@InactiveLineStyles"></div>
            <div class="active-line" style="@ActiveLineStyles"></div>
        </div>
    </div>
    }
</div>

@if (!string.IsNullOrEmpty(SupportingText))
{
<div class="validation-text" style="@SupportingTextStyles">
    @SupportingText
</div>
}
