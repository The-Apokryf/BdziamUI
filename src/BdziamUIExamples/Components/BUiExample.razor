@inherits Bdziam.UI.Components.CommonBase.BComponentBase
@namespace Bdziam.UI
@typeparam Component
@inject IJSRuntime JSRuntime

<BContainer Padding="Size.Medium" BorderRadius="BorderRadius.Medium" SurfaceMaterialColor="MaterialColor.SurfaceContainer" Elevation="2">
    <BStack Orientation="Orientation.Vertical">
        <DynamicComponent Type="@typeof(Component)"/>
        <BFoldout Header="See Code" Icon="GoogleMaterialFilledIcon.Code">
            <BContainer Padding="Size.None" SurfaceMaterialColor="MaterialColor.Surface" Elevation="3">
                <BStack Orientation="Orientation.Horizontal" Style="align-content: end;">
                    <BButton Variant="ButtonVariant.Outline" StartIcon="MdiIcon.ContentCopy" OnClick="CopyCodeToClipboard">@copyButtonContent</BButton>
                </BStack>
            </BContainer>
            <CodeSnippet Language="Language.razor" Style="PSC.Blazor.Components.CodeSnippet.Style.atom_one_dark">
                @Code
            </CodeSnippet>
        </BFoldout>
    </BStack>
</BContainer>

@code {
    private string copyButtonContent { get; set; } = "Copy to clipboard";
    private string? Code { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    
    private async Task CopyCodeToClipboard()
    {
        if (Code != null)
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", Code);
            copyButtonContent = "Copied!";
            StateHasChanged();
            await Task.Delay(2000); // Reset button content after 2 seconds
            copyButtonContent = "Copy to clipboard";
            StateHasChanged();
        }

    }

    protected override async Task OnInitializedAsync()
    {
        var exampleType = typeof(Component);
        var componentName = exampleType.Name + ".razor";
        Code =  EmbeddedResourceReader.GetEmbeddedResource(componentName);
    }

}